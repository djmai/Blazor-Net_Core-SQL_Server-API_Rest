@page "/Registrarse"
@inject NavigationManager navigationManager
@using ModeloClasesAlumnos


<EditForm Model="@usuario" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <h3>Nuevo Alumno</h3>
    <hr />
    <ValidationSummary />
    <div class="form-group row">
        <label for="Email" class="col-sm-2 col-form-label">
            Email
        </label>
        <div class="col-sm-10">
            <InputText id="Email" class="form-control" placeholder="Email"
                       @bind-Value="usuario.EmailLogin" />
            <ValidationMessage For="@(() => usuario.EmailLogin)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="Email" class="col-sm-2 col-form-label">
            Password
        </label>
        <div class="col-sm-10">
            <InputText type="password" id="Email" class="form-control" placeholder="Password"
                       @bind-Value="usuario.EmailPassword" />
            <ValidationMessage For="@(() => usuario.EmailPassword)" />
        </div>
    </div>

    <div class="row content">
        <div class="col-md-1">   <input type="submit" class="btn btn-primary" value="Guardar" @onclick="Guardar" /></div>
        <div class="col-md-2">
            <input type="button" value="Cancelar" class="btn btn-danger" @onclick="Cancelar" />
        </div>
    </div>


</EditForm>

@code {
    UsuarioLogin usuario = new UsuarioLogin();
 

    protected async Task Guardar()
    {
        try
        {
            //Guardamos el usuario en nuesttra base de datos
        }
        catch (Exception ex)
        {
            //textoError = ex.Message;
            //MostrarError();
            //StateHasChanged();
        }
    }

    public void HandleValidSubmit()
    {
        Console.WriteLine("OnValidSubmit");
    }

    protected void Cancelar()
    {
        navigationManager.NavigateTo("/IniciarSesion");
    }
}
